/**
 * 7-Segment Decoder (Corrected Implementation)
 * Student ID: 201890722
 * Properly uses only 2-input AND/OR gates
 */
CHIP DecoderSegment201890722 {
    IN A, B, C, D;
    OUT a, b, c, d, e, f, g;

    PARTS:
    // ===== Input inversions =====
    Not(in=A, out=notA);
    Not(in=B, out=notB);
    Not(in=C, out=notC);
    Not(in=D, out=notD);

    // ===== Segment a =====
    // a = A'B'C'D + A'BC'D' + AB'CD'
 And(a=notA, \
    b=B, \
    out=a_temp3);
    And(a=a_temp1, b=notC, out=a_temp2);
    And(a=a_temp2, b=D, out=a_term1);
    
    And(a=notA, b=B, out=a_temp3);
    And(a=a_temp3, b=notC, out=a_temp4);
    And(a=a_temp4, b=notD, out=a_term2);
    
    And(a=A, b=notB, out=a_temp5);
    And(a=a_temp5, b=C, out=a_temp6);
    And(a=a_temp6, b=notD, out=a_term3);
    
    Or(a=a_term1, b=a_term2, out=a_temp7);
    Or(a=a_temp7, b=a_term3, out=a);

    // ===== Segment b =====
    // b = A'BD' + A'BC + AB'C'D'
    And(a=notA, b=B, out=b_temp1);
    And(a=b_temp1, b=notD, out=b_term1);
    
    And(a=notA, b=B, out=b_temp2);
    And(a=b_temp2, b=C, out=b_term2);
    
    And(a=A, b=notB, out=b_temp3);
    And(a=b_temp3, b=notC, out=b_temp4);
    And(a=b_temp4, b=notD, out=b_term3);
    
    Or(a=b_term1, b=b_term2, out=b_temp5);
    Or(a=b_temp5, b=b_term3, out=b);

    // ===== Segment c =====
    // c = A'B'C + A'BC'D' + AB'C'
    And(a=notA, b=notB, out=c_temp1);
    And(a=c_temp1, b=C, out=c_term1);
    
    And(a=notA, b=B, out=c_temp2);
    And(a=c_temp2, b=notC, out=c_temp3);
    And(a=c_temp3, b=notD, out=c_term2);
    
    And(a=A, b=notB, out=c_temp4);
    And(a=c_temp4, b=notC, out=c_term3);
    
    Or(a=c_term1, b=c_term2, out=c_temp5);
    Or(a=c_temp5, b=c_term3, out=c);

    // ===== Segment d =====
    // d = A'B'C'D + A'BC'D + AB'CD' + ABCD
    And(a=notA, b=notB, out=d_temp1);
    And(a=d_temp1, b=notC, out=d_temp2);
    And(a=d_temp2, b=D, out=d_term1);
    
    And(a=notA, b=B, out=d_temp3);
    And(a=d_temp3, b=notC, out=d_temp4);
    And(a=d_temp4, b=D, out=d_term2);
    
    And(a=A, b=notB, out=d_temp5);
    And(a=d_temp5, b=C, out=d_temp6);
    And(a=d_temp6, b=notD, out=d_term3);
    
    And(a=A, b=B, out=d_temp7);
    And(a=d_temp7, b=C, out=d_temp8);
    And(a=d_temp8, b=D, out=d_term4);
    
    Or(a=d_term1, b=d_term2, out=d_temp9);
    Or(a=d_temp9, b=d_term3, out=d_temp10);
    Or(a=d_temp10, b=d_term4, out=d);

    // ===== Segment e =====
    // e = A'B'C'D + A'B'CD + A'BC'D + ABCD'
    And(a=notA, b=notB, out=e_temp1);
    And(a=e_temp1, b=notC, out=e_temp2);
    And(a=e_temp2, b=D, out=e_term1);
    
    And(a=notA, b=notB, out=e_temp3);
    And(a=e_temp3, b=C, out=e_temp4);
    And(a=e_temp4, b=D, out=e_term2);
    
    And(a=notA, b=B, out=e_temp5);
    And(a=e_temp5, b=notC, out=e_temp6);
    And(a=e_temp6, b=D, out=e_term3);
    
    And(a=A, b=B, out=e_temp7);
    And(a=e_temp7, b=C, out=e_temp8);
    And(a=e_temp8, b=notD, out=e_term4);
    
    Or(a=e_term1, b=e_term2, out=e_temp9);
    Or(a=e_temp9, b=e_term3, out=e_temp10);
    Or(a=e_temp10, b=e_term4, out=e);

    // ===== Segment f =====
    // f = A'B'C'D + A'B'CD' + A'B'CD + A'BC'D'
    And(a=notA, b=notB, out=f_temp1);
    And(a=f_temp1, b=notC, out=f_temp2);
    And(a=f_temp2, b=D, out=f_term1);
    
    And(a=notA, b=notB, out=f_temp3);
    And(a=f_temp3, b=C, out=f_temp4);
    And(a=f_temp4, b=notD, out=f_term2);
    
    And(a=notA, b=notB, out=f_temp5);
    And(a=f_temp5, b=C, out=f_temp6);
    And(a=f_temp6, b=D, out=f_term3);
    
    And(a=notA, b=B, out=f_temp7);
    And(a=f_temp7, b=notC, out=f_temp8);
    And(a=f_temp8, b=notD, out=f_term4);
    
    Or(a=f_term1, b=f_term2, out=f_temp9);
    Or(a=f_temp9, b=f_term3, out=f_temp10);
    Or(a=f_temp10, b=f_term4, out=f);

    // ===== Segment g =====
    // g = A'B'C'D' + A'B'CD + A'BC'D + ABCD'
    And(a=notA, b=notB, out=g_temp1);
    And(a=g_temp1, b=notC, out=g_temp2);
    And(a=g_temp2, b=notD, out=g_term1);
    
    And(a=notA, b=notB, out=g_temp3);
    And(a=g_temp3, b=C, out=g_temp4);
    And(a=g_temp4, b=D, out=g_term2);
    
    And(a=notA, b=B, out=g_temp5);
    And(a=g_temp5, b=notC, out=g_temp6);
    And(a=g_temp6, b=D, out=g_term3);
    
    And(a=A, b=B, out=g_temp7);
    And(a=g_temp7, b=C, out=g_temp8);
    And(a=g_temp8, b=notD, out=g_term4);
    
    Or(a=g_term1, b=g_term2, out=g_temp9);
    Or(a=g_temp9, b=g_term3, out=g_temp10);
    Or(a=g_temp10, b=g_term4, out=g);
}